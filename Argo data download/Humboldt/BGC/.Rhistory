geom_point(size = 4, alpha = 0.5) +
geom_smooth(method = lm, se = F) +
facet_wrap(~Type) +
labs(title = 'consumo co2', x = 'concentracion', y = 'consumo de co2')
names(CO2)
ggplot(CO2, aes(Treatment, uptake)) +
geom_boxplot()
ggplot(CO2, aes(Treatment, uptake)) +
geom_boxplot() +
geom_point(aes(size = conc, col = Plant))
ggplot(CO2, aes(Treatment, uptake)) +
geom_boxplot() +
geom_point(aes(size = conc, col = Plant), alpha = 0.4) +
facet_wrap(~Type) +
coord_flip() +
labs(title = 'consumo co2', x = 'tratamiento', y = 'consumo')
ggplot(mpg, aes(displ, cty)) +
geom_point(aes(col = drv, size = trans), alpha = 0.3) +
geom_line(col = 'magenta') +
geom_smooth() +
facet_wrap(~year, nrow = 1) +
theme_dark()
# parte 1 bod: /25pts
ggplot(data = BOD,
mapping = aes(x=Time, y= demand))
ggplot(data = BOD,
mapping=aes(x=Time, y=demand))+
geom_point(size= 2)+
geom_line(size= 2,  col= "darkgoldenrod4")
ggplot(data = BOD,
mapping=aes(x=Time, y=demand))+
geom_point(size= 2)+
geom_line(size= 2,  col= "black")+
labs(title = "BOD", subtitle = "inicial", x="Tiempo", y= "Demanda")
#Simplificaci?n
ggplot(BOD,aes(Time, demand))+
geom_point(size= 2)+
geom_line(size= 2,  col= "black")+
labs(title = "BOD", subtitle = "inicial", x="Tiempo", y= "Demanda")
str(CO2)
names(CO2)
ggplot(CO2,aes(conc, uptake, col=Treatment))+
geom_point(size=2, alpha=0.5) #Alpha grafico de transparencia
#Agreagr la l?nea
ggplot(CO2,aes(conc, uptake, col=Treatment))+
geom_point(size=2, alpha=0.5)+
geom_smooth(method= lm, se=F)
#Agregar etiquetas
ggplot(CO2,aes(conc, uptake, col=Treatment))+
geom_point(size=2, alpha=0.5)+
geom_smooth(method= lm, se=F)+
facet_wrap(~Type)+
labs(title="Consumo de Co2", X= "Concentraci?n", y="Consumo de Co2")
#Boxplot
names(CO2)
ggplot(CO2,aes(Treatment, uptake))+
geom_boxplot()+#Boxplot, dos graficos en "modo caja"
geom_point(aes(size=conc, col=Plant))#Puntos tematizados
ggplot(mpg,aes(displ, cty))+
geom_point()
ggplot(mpg,aes(displ,cty))+
geom_point(aes(col=drv, size=trans), alpha=0.4)
ggplot(mpg,aes(displ,cty))+
geom_point(aes(col=drv, size=trans), alpha=0.4)+
geom_smooth()+
facet_wrap(~year, nrow = 1)+
theme_light()
# parte 1 bod: /25pts
#Primera instrucci?n ggplot
ggplot(data=BOD,
mapping=aes(x=time, y=demand))
#Agregamos los puntos
ggplot(data=BOD,
mapping=aes(x=time, y=demand)) +
geom_point()
# parte 1 bod: /25pts
#Primera instrucci?n ggplot
ggplot(data=BOD,
mapping=aes(x=time, y=demand))
#Agregamos los puntos
ggplot(data=BOD,
mapping=aes(x=time, y=demand)) +
geom_point()
#Agrega l?nea
ggplot(data=BOD,
mapping=aes(x=time, y=demand)) +
geom_point(size=2) +
geom_line()
#Mayor control del gr?fico
ggplot(data=BOD,
mapping=aes(x=time, y=demand)) +
geom_point(size=4) +
geom_line(col="red")
#Control etiquetas
ggplot(data=BOD,
mapping=aes(x=time, y=demand)) +
geom_point(size=4) +
geom_line(col="red") +
labs(titlw="demanda", subtitle="inicial", x="tiempo")
#Simplificado:
ggplot(BOD,aes,Time,demand)) +
geom_point(size=4) +
geom_line(col="red") +
labs(titlw="demanda", subtitle="inicial", x="tiempo")
names(CO2)
ggplot(CO2,aes(conc, uptake, col=Treatment))+
geom_point(size=3,alpha=0.5)
#Alpha<- va del 0 al 1, aumenta o disminuye el grado de transparencia; 1  m?s transparente, 0 menos transparente.
#Agregar otra capa tendencia linea
ggplot(CO2,aes(conc, uptake, col=Treatment))+
geom_point(size=3,alpha=0.5) +
geom_smooth(method=lm, se=F)
#Partir la figura en 2
ggplot(CO2,aes(conc, uptake, col=Treatment,uptake))+
geom_point(size=3,alpha=0.5) +
geom_smooth(method=lm, se=F) +
facet_wrap(Type) +
labs(title="consumo de CO2", x="Concentracion")
#Otro tipo de visualizacion
names(CO2)
ggplot(CO2, aes(Treatment,uptake)) +
geom_boxplot()
#Puntos tematizados
ggplot(CO2,aes(conc, uptake, col=Treatment,uptake))+
geom_boxplot() +
geom_point(aes(size=conc, col=plant))
#Mayor complejidad
ggplot(CO2,aes(conc, uptake, col=Treatment,uptake))+
geom_boxplot() +
geom_point(alpha=0.4,
aes(size=conc, col=plant)) +
facet_wrap(Type)
#Rendimiento vehicular linea de tendencia.
View("mpg")
names(mpg)
ggplot(mpg,aes(displ, cty)) +
shiny::runApp('C:/Users/Windows/Downloads/App_colombia')
runApp('C:/Users/Windows/Downloads/App_Cuadrantes')
runApp('C:/Users/Windows/Downloads/App_Cuadrantes')
runApp('C:/Users/Windows/Downloads/App_Cuadrantes/app_2.R')
runApp('C:/Users/Windows/Downloads/App_colombia/app_colombia_completa.R')
# Carga de datos:
library(readr)
library(dplyr)
library(dbplyr)
ruta="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC/"
##################################################################################
df <- list.files(path=ruta) %>%
lapply(read_csv) %>%
bind_rows
##################################################################################
df <- list.files(path="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC/") %>%
lapply(read_csv) %>%
bind_rows
##################################################################################
df <- list.files(path="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC") %>%
lapply(read_csv) %>%
bind_rows
ruta="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC/"
setwd(ruta)
##################################################################################
df <- list.files(path="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC") %>%
lapply(read_csv) %>%
bind_rows
View(df)
df1<-df %<% filter(Oxy !=NA & Oxy_adj !=NA)
df1<-df %>% filter(Oxy !=NA & Oxy_adj !=NA)
df1<-df %>% filter(Oxy !=NA | Oxy_adj !=NA)
df1<-df %>% filter(Oxy !=NA )
df1<-df %>% filter(!is.na(Oxy))
df %>% filter(!is.na(Oxy))
df %>% filter(is.na(Oxy))
df %>% filter(!is.na(Oxy_adj))
df1<-df %>% filter(!is.na(Oxy_adj))
View(df1)
df1<-df %>% filter(!is.na(Oxy_adj) &!is.na(Lon) & !is.na(Lat) & !is.na(Pres) & !is.na(Pres_Adj))
df1<-df %>% filter(!is.na(Oxy_adj) &!is.na(Lon) & !is.na(Lat) & !is.na(Pres) & !is.na(Pres_Adj) & !is.na(Ciclo) & !is.na(Id))
write.csv(df1, file = paste(ruta,"df_oxy_bgc_final.csv",sep=''),row.names = FALSE)
rm(list=ls())
#library(argoFloats)
library(devtools)
#install_github("ArgoCanada/argoFloats", ref="develop")
library(argoFloats)
library(oce)
#install.packages("ncdf4")
library(ncdf4)
#install.packages("ocedata")
library(ocedata)
###### Core
rm(list=ls())
# Obtener la ruta
getwd()
rm(list=ls())
ai<-getIndex(filename = 'synthetic')
from <- as.POSIXct("2005-01-01", tz="UTC")
to <- as.POSIXct("2005-12-31", tz="UTC")
subset1 <- subset(ai, time=list(from=from, to=to))
rect <- list(longitude=c(-85,-70), latitude=c(-45,-15))
subset2 <- subset(subset1, rectangle=rect)
subo<-subset(subset2,parameter='CHLA')
profiles<- getProfiles(subo)# Crear lista con perfiles
argos1<-readProfiles(profiles) # Leer los perfiles
argos<-applyQC(argos1) # Limpiar datos con mala calidad
# Crear el vector tiempo
time_x<-c() # Al inicio vacio y se llena con el for
Lat_x<-c()
Lon_x<-c()
Cyc_x<-c()
Ins_x<-c()
Id_x<-c()
# Nuevos vectores
Sal<-c(); Sal_Adj<-c();Temp<-c(); Temp_Adj<-c();Pres<-c();Pres_Adj<-c(); CHLA<-c(); CHLA_adj<-c()
for (i in 1:length(argos@data[['argos']])){# Entrar a cada perfil
y<-dim(argos@data[["argos"]][[i]]@data[["pressure"]]) # Longitud del vector presion
y<-y[1] # Primera coordenada >>filas
x<-argos@data[["argos"]][[i]]@data[["time"]] # Extraccion del valor tiempo
time_1<- rep(x, y) # Repetir el valor de fecha y veces
time_x<-append(time_x,time_1) # agregar al vector vacio
# Latitud
x1<-argos@data[["argos"]][[i]]@data[["latitude"]] # Extraccion del valor latitud
Lat_1<- rep(x1, y) # Repetir el valor de fecha y veces
Lat_x<-append(Lat_x,Lat_1) # agregar al vector vacio
# Longitud
x2<-argos@data[["argos"]][[i]]@data[["longitude"]] # Extraccion del valor longitud
Lon_1<- rep(x2, y) # Repetir el valor de fecha y veces
Lon_x<-append(Lon_x,Lon_1) # agregar al vector vacio
# Ciclo
x3<-argos@data[["argos"]][[i]]@metadata$cycleNumber # Extraccion del valor ciclo
cyc_1<- rep(x3, y) # Repetir el valor de fecha y veces
Cyc_x<-append(Cyc_x,cyc_1) # agregar al vector vacio
# Institucion
#x4<-argos@data[["argos"]][[i]]@metadata$institution[1] # Extraccion del valor institucion
#ins_1<- rep(x4, y) # Repetir el valor de fecha y veces
#Ins_x<-append(Ins_x,ins_1) # agregar al vector vacio
# Id
x5<-argos@data[["argos"]][[i]]@metadata$id # Extraccion del valor id
id_1<- rep(x5, y) # Repetir el valor de fecha y veces
Id_x<-append(Id_x,id_1) # agregar al vector vacio
# Salinidad
x6<-argos@data[["argos"]][[i]]@data[["salinity"]] # Extraccion de salinidad
Sal<-append(Sal,x6) # agregar al vector vacio
# Salinidad ajustada
x7<-argos@data[["argos"]][[i]]@data[["salinityAdjusted"]] # Extraccion de salinidad Adj
Sal_Adj<-append(Sal_Adj,x7) # agregar al vector vacio
# Temperatura
x8<-argos@data[["argos"]][[i]]@data[["temperature"]] # Extraccion de T
Temp<-append(Temp,x8) # agregar al vector vacio
# Temperature ajustada
x9<-argos@data[["argos"]][[i]]@data[["temperatureAdjusted"]] # Extraccion de T adj
Temp_Adj<-append(Temp_Adj,x9) # agregar al vector vacio
# Presion
x10<-argos@data[["argos"]][[i]]@data[["pressure"]] # Extraccion de presion
Pres<-append(Pres,x10) # agregar al vector vacio
# Presion Ajustada
x11<-argos@data[["argos"]][[i]]@data[["pressureAdjusted"]] # Extraccion de presion
Pres_Adj<-append(Pres_Adj,x11) # agregar al vector vacio
# clorofila
x12<-argos@data[["argos"]][[i]]@data[["chlorophyllA"]] # Extraccion de presion
CHLA<-append(CHLA,x12) # agregar al vector vacio
# clorofila ajustado
x13<-argos@data[["argos"]][[i]]@data[["chlorophyllAAdjusted"]] # Extraccion de presion
CHLA_adj<-append(CHLA_adj,x13) # agregar al vector vacio
}
print(length(time_x));print(length(Lat_x));print(length(Lon_x));print(length(Cyc_x));print(length(Id_x));
print(length(Sal));print(length(Sal_Adj));print(length(Temp));print(length(Temp_Adj))
print(length(Pres));print(length(Pres_Adj));print(length(CHLA));print(length(CHLA_adj))
# Crear el dataset final
df_chla<-data.frame(time_x,Lon_x, Lat_x,Pres,Pres_Adj,Temp,Temp_Adj,Sal,Sal_Adj,CHLA,CHLA_adj,Cyc_x,Id_x)
library(dplyr)
df_chla<-df_chla%>%rename(Fecha=time_x, Lon=Lon_x, Lat=Lat_x,Ciclo=Cyc_x, Id= Id_x)
# Guardar el dataset final
ruta="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC/"
write.csv(df_chla, file = paste(ruta,"df_chla_bgc_2005.csv",sep=''),row.names = FALSE)
######## 1) CHLA (Clorofila) ################
# Subset by time.
from <- as.POSIXct("2006-01-01", tz="UTC")
to <- as.POSIXct("2006-12-31", tz="UTC")
subset1 <- subset(ai, time=list(from=from, to=to))
rect <- list(longitude=c(-85,-70), latitude=c(-45,-15))
subset2 <- subset(subset1, rectangle=rect)
subo<-subset(subset2,parameter='CHLA')
profiles<- getProfiles(subo)# Crear lista con perfiles
argos1<-readProfiles(profiles) # Leer los perfiles
argos<-applyQC(argos1) # Limpiar datos con mala calidad
time_x<-c() # Al inicio vacio y se llena con el for
Lat_x<-c()
Lon_x<-c()
Cyc_x<-c()
Ins_x<-c()
Id_x<-c()
# Nuevos vectores
Sal<-c(); Sal_Adj<-c();Temp<-c(); Temp_Adj<-c();Pres<-c();Pres_Adj<-c(); CHLA<-c(); CHLA_adj<-c()
#length(argos@data[['argos']])
for (i in 1:length(argos@data[['argos']])){# Entrar a cada perfil
y<-dim(argos@data[["argos"]][[i]]@data[["pressure"]]) # Longitud del vector presion
y<-y[1] # Primera coordenada >>filas
x<-argos@data[["argos"]][[i]]@data[["time"]] # Extraccion del valor tiempo
time_1<- rep(x, y) # Repetir el valor de fecha y veces
time_x<-append(time_x,time_1) # agregar al vector vacio
# Latitud
x1<-argos@data[["argos"]][[i]]@data[["latitude"]] # Extraccion del valor latitud
Lat_1<- rep(x1, y) # Repetir el valor de fecha y veces
Lat_x<-append(Lat_x,Lat_1) # agregar al vector vacio
# Longitud
x2<-argos@data[["argos"]][[i]]@data[["longitude"]] # Extraccion del valor longitud
Lon_1<- rep(x2, y) # Repetir el valor de fecha y veces
Lon_x<-append(Lon_x,Lon_1) # agregar al vector vacio
# Ciclo
x3<-argos@data[["argos"]][[i]]@metadata$cycleNumber # Extraccion del valor ciclo
cyc_1<- rep(x3, y) # Repetir el valor de fecha y veces
Cyc_x<-append(Cyc_x,cyc_1) # agregar al vector vacio
# Institucion
#x4<-argos@data[["argos"]][[i]]@metadata$institution[1] # Extraccion del valor institucion
#ins_1<- rep(x4, y) # Repetir el valor de fecha y veces
#Ins_x<-append(Ins_x,ins_1) # agregar al vector vacio
# Id
x5<-argos@data[["argos"]][[i]]@metadata$id # Extraccion del valor id
id_1<- rep(x5, y) # Repetir el valor de fecha y veces
Id_x<-append(Id_x,id_1) # agregar al vector vacio
# Salinidad
x6<-argos@data[["argos"]][[i]]@data[["salinity"]] # Extraccion de salinidad
Sal<-append(Sal,x6) # agregar al vector vacio
# Salinidad ajustada
x7<-argos@data[["argos"]][[i]]@data[["salinityAdjusted"]] # Extraccion de salinidad Adj
Sal_Adj<-append(Sal_Adj,x7) # agregar al vector vacio
# Temperatura
x8<-argos@data[["argos"]][[i]]@data[["temperature"]] # Extraccion de T
Temp<-append(Temp,x8) # agregar al vector vacio
# Temperature ajustada
x9<-argos@data[["argos"]][[i]]@data[["temperatureAdjusted"]] # Extraccion de T adj
Temp_Adj<-append(Temp_Adj,x9) # agregar al vector vacio
# Presion
x10<-argos@data[["argos"]][[i]]@data[["pressure"]] # Extraccion de presion
Pres<-append(Pres,x10) # agregar al vector vacio
# Presion Ajustada
x11<-argos@data[["argos"]][[i]]@data[["pressureAdjusted"]] # Extraccion de presion
Pres_Adj<-append(Pres_Adj,x11) # agregar al vector vacio
# clorofila
x12<-argos@data[["argos"]][[i]]@data[["chlorophyllA"]] # Extraccion de presion
CHLA<-append(CHLA,x12) # agregar al vector vacio
# clorofila ajustado
x13<-argos@data[["argos"]][[i]]@data[["chlorophyllAAdjusted"]] # Extraccion de presion
CHLA_adj<-append(CHLA_adj,x13) # agregar al vector vacio
}
print(length(time_x));print(length(Lat_x));print(length(Lon_x));print(length(Cyc_x));print(length(Id_x));
print(length(Sal));print(length(Sal_Adj));print(length(Temp));print(length(Temp_Adj))
print(length(Pres));print(length(Pres_Adj));print(length(CHLA));print(length(CHLA_adj))
df_chla<-data.frame(time_x,Lon_x, Lat_x,Pres,Pres_Adj,Temp,Temp_Adj,Sal,Sal_Adj,CHLA,CHLA_adj,Cyc_x,Id_x)
library(dplyr)
df_chla<-df_chla%>%rename(Fecha=time_x, Lon=Lon_x, Lat=Lat_x,Ciclo=Cyc_x, Id= Id_x)
# Guardar el dataset final
ruta="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC/"
write.csv(df_chla, file = paste(ruta,"df_chla_bgc_2006.csv",sep=''),row.names = FALSE)
from <- as.POSIXct("2007-01-01", tz="UTC")
to <- as.POSIXct("2007-12-31", tz="UTC")
subset1 <- subset(ai, time=list(from=from, to=to))
rect <- list(longitude=c(-85,-70), latitude=c(-45,-15))
subset2 <- subset(subset1, rectangle=rect)
subo<-subset(subset2,parameter='CHLA')
profiles<- getProfiles(subo)# Crear lista con perfiles
argos1<-readProfiles(profiles) # Leer los perfiles
argos<-applyQC(argos1) # Limpiar datos con mala calidad
# Crear el vector tiempo
time_x<-c() # Al inicio vacio y se llena con el for
Lat_x<-c()
Lon_x<-c()
Cyc_x<-c()
Ins_x<-c()
Id_x<-c()
# Nuevos vectores
Sal<-c(); Sal_Adj<-c();Temp<-c(); Temp_Adj<-c();Pres<-c();Pres_Adj<-c(); CHLA<-c(); CHLA_adj<-c()
#length(argos@data[['argos']])
for (i in 1:length(argos@data[['argos']])){# Entrar a cada perfil
y<-dim(argos@data[["argos"]][[i]]@data[["pressure"]]) # Longitud del vector presion
y<-y[1] # Primera coordenada >>filas
x<-argos@data[["argos"]][[i]]@data[["time"]] # Extraccion del valor tiempo
time_1<- rep(x, y) # Repetir el valor de fecha y veces
time_x<-append(time_x,time_1) # agregar al vector vacio
# Latitud
x1<-argos@data[["argos"]][[i]]@data[["latitude"]] # Extraccion del valor latitud
Lat_1<- rep(x1, y) # Repetir el valor de fecha y veces
Lat_x<-append(Lat_x,Lat_1) # agregar al vector vacio
# Longitud
x2<-argos@data[["argos"]][[i]]@data[["longitude"]] # Extraccion del valor longitud
Lon_1<- rep(x2, y) # Repetir el valor de fecha y veces
Lon_x<-append(Lon_x,Lon_1) # agregar al vector vacio
# Ciclo
x3<-argos@data[["argos"]][[i]]@metadata$cycleNumber # Extraccion del valor ciclo
cyc_1<- rep(x3, y) # Repetir el valor de fecha y veces
Cyc_x<-append(Cyc_x,cyc_1) # agregar al vector vacio
# Institucion
#x4<-argos@data[["argos"]][[i]]@metadata$institution[1] # Extraccion del valor institucion
#ins_1<- rep(x4, y) # Repetir el valor de fecha y veces
#Ins_x<-append(Ins_x,ins_1) # agregar al vector vacio
# Id
x5<-argos@data[["argos"]][[i]]@metadata$id # Extraccion del valor id
id_1<- rep(x5, y) # Repetir el valor de fecha y veces
Id_x<-append(Id_x,id_1) # agregar al vector vacio
# Salinidad
x6<-argos@data[["argos"]][[i]]@data[["salinity"]] # Extraccion de salinidad
Sal<-append(Sal,x6) # agregar al vector vacio
# Salinidad ajustada
x7<-argos@data[["argos"]][[i]]@data[["salinityAdjusted"]] # Extraccion de salinidad Adj
Sal_Adj<-append(Sal_Adj,x7) # agregar al vector vacio
# Temperatura
x8<-argos@data[["argos"]][[i]]@data[["temperature"]] # Extraccion de T
Temp<-append(Temp,x8) # agregar al vector vacio
# Temperature ajustada
x9<-argos@data[["argos"]][[i]]@data[["temperatureAdjusted"]] # Extraccion de T adj
Temp_Adj<-append(Temp_Adj,x9) # agregar al vector vacio
# Presion
x10<-argos@data[["argos"]][[i]]@data[["pressure"]] # Extraccion de presion
Pres<-append(Pres,x10) # agregar al vector vacio
# Presion Ajustada
x11<-argos@data[["argos"]][[i]]@data[["pressureAdjusted"]] # Extraccion de presion
Pres_Adj<-append(Pres_Adj,x11) # agregar al vector vacio
# clorofila
x12<-argos@data[["argos"]][[i]]@data[["chlorophyllA"]] # Extraccion de presion
CHLA<-append(CHLA,x12) # agregar al vector vacio
# clorofila ajustado
x13<-argos@data[["argos"]][[i]]@data[["chlorophyllAAdjusted"]] # Extraccion de presion
CHLA_adj<-append(CHLA_adj,x13) # agregar al vector vacio
}
print(length(time_x));print(length(Lat_x));print(length(Lon_x));print(length(Cyc_x));print(length(Id_x));
print(length(Sal));print(length(Sal_Adj));print(length(Temp));print(length(Temp_Adj))
print(length(Pres));print(length(Pres_Adj));print(length(CHLA));print(length(CHLA_adj))
df_chla<-data.frame(time_x,Lon_x, Lat_x,Pres,Pres_Adj,Temp,Temp_Adj,Sal,Sal_Adj,CHLA,CHLA_adj,Cyc_x,Id_x)
library(dplyr)
df_chla<-df_chla%>%rename(Fecha=time_x, Lon=Lon_x, Lat=Lat_x,Ciclo=Cyc_x, Id= Id_x)
# Guardar el dataset final
ruta="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC/"
View(df_chla)
write.csv(df_chla, file = paste(ruta,"df_chla_bgc_2007.csv",sep=''),row.names = FALSE)
from <- as.POSIXct("2008-01-01", tz="UTC")
to <- as.POSIXct("2008-12-31", tz="UTC")
subset1 <- subset(ai, time=list(from=from, to=to))
rect <- list(longitude=c(-85,-70), latitude=c(-45,-15))
subset2 <- subset(subset1, rectangle=rect)
subo<-subset(subset2,parameter='CHLA')
profiles<- getProfiles(subo)# Crear lista con perfiles
argos1<-readProfiles(profiles) # Leer los perfiles
argos<-applyQC(argos1) # Limpiar datos con mala calidad
# Crear el vector tiempo
time_x<-c() # Al inicio vacio y se llena con el for
Lat_x<-c()
Lon_x<-c()
Cyc_x<-c()
Ins_x<-c()
Id_x<-c()
# Nuevos vectores
Sal<-c(); Sal_Adj<-c();Temp<-c(); Temp_Adj<-c();Pres<-c();Pres_Adj<-c(); CHLA<-c(); CHLA_adj<-c()
#length(argos@data[['argos']])
for (i in 1:length(argos@data[['argos']])){# Entrar a cada perfil
y<-dim(argos@data[["argos"]][[i]]@data[["pressure"]]) # Longitud del vector presion
y<-y[1] # Primera coordenada >>filas
x<-argos@data[["argos"]][[i]]@data[["time"]] # Extraccion del valor tiempo
time_1<- rep(x, y) # Repetir el valor de fecha y veces
time_x<-append(time_x,time_1) # agregar al vector vacio
# Latitud
x1<-argos@data[["argos"]][[i]]@data[["latitude"]] # Extraccion del valor latitud
Lat_1<- rep(x1, y) # Repetir el valor de fecha y veces
Lat_x<-append(Lat_x,Lat_1) # agregar al vector vacio
# Longitud
x2<-argos@data[["argos"]][[i]]@data[["longitude"]] # Extraccion del valor longitud
Lon_1<- rep(x2, y) # Repetir el valor de fecha y veces
Lon_x<-append(Lon_x,Lon_1) # agregar al vector vacio
# Ciclo
x3<-argos@data[["argos"]][[i]]@metadata$cycleNumber # Extraccion del valor ciclo
cyc_1<- rep(x3, y) # Repetir el valor de fecha y veces
Cyc_x<-append(Cyc_x,cyc_1) # agregar al vector vacio
# Institucion
#x4<-argos@data[["argos"]][[i]]@metadata$institution[1] # Extraccion del valor institucion
#ins_1<- rep(x4, y) # Repetir el valor de fecha y veces
#Ins_x<-append(Ins_x,ins_1) # agregar al vector vacio
# Id
x5<-argos@data[["argos"]][[i]]@metadata$id # Extraccion del valor id
id_1<- rep(x5, y) # Repetir el valor de fecha y veces
Id_x<-append(Id_x,id_1) # agregar al vector vacio
# Salinidad
x6<-argos@data[["argos"]][[i]]@data[["salinity"]] # Extraccion de salinidad
Sal<-append(Sal,x6) # agregar al vector vacio
# Salinidad ajustada
x7<-argos@data[["argos"]][[i]]@data[["salinityAdjusted"]] # Extraccion de salinidad Adj
Sal_Adj<-append(Sal_Adj,x7) # agregar al vector vacio
# Temperatura
x8<-argos@data[["argos"]][[i]]@data[["temperature"]] # Extraccion de T
Temp<-append(Temp,x8) # agregar al vector vacio
# Temperature ajustada
x9<-argos@data[["argos"]][[i]]@data[["temperatureAdjusted"]] # Extraccion de T adj
Temp_Adj<-append(Temp_Adj,x9) # agregar al vector vacio
# Presion
x10<-argos@data[["argos"]][[i]]@data[["pressure"]] # Extraccion de presion
Pres<-append(Pres,x10) # agregar al vector vacio
# Presion Ajustada
x11<-argos@data[["argos"]][[i]]@data[["pressureAdjusted"]] # Extraccion de presion
Pres_Adj<-append(Pres_Adj,x11) # agregar al vector vacio
# clorofila
x12<-argos@data[["argos"]][[i]]@data[["chlorophyllA"]] # Extraccion de presion
CHLA<-append(CHLA,x12) # agregar al vector vacio
# clorofila ajustado
x13<-argos@data[["argos"]][[i]]@data[["chlorophyllAAdjusted"]] # Extraccion de presion
CHLA_adj<-append(CHLA_adj,x13) # agregar al vector vacio
}
print(length(time_x));print(length(Lat_x));print(length(Lon_x));print(length(Cyc_x));print(length(Id_x));
print(length(Sal));print(length(Sal_Adj));print(length(Temp));print(length(Temp_Adj))
print(length(Pres));print(length(Pres_Adj));print(length(CHLA));print(length(CHLA_adj))
# Crear el dataset final
df_chla<-data.frame(time_x,Lon_x, Lat_x,Pres,Pres_Adj,Temp,Temp_Adj,Sal,Sal_Adj,CHLA,CHLA_adj,Cyc_x,Id_x)
library(dplyr)
df_chla<-df_chla%>%rename(Fecha=time_x, Lon=Lon_x, Lat=Lat_x,Ciclo=Cyc_x, Id= Id_x)
# Guardar el dataset final
ruta="C:/Users/Windows/Desktop/Argo Tesis/Humboldt/BGC/"
